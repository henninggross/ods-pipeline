name: Tekton Tasks Tests

on: [push, pull_request]

jobs:
  build-ods-images:
    name: Build ODS images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerFileSuffix:
          ["buildah", "go-toolset", "helm", "interceptor", "sonar"]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build (no push for now)
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          file: build/package/Dockerfile.${{ matrix.dockerFileSuffix }}
          tags: ghcr.io/opendevstack/${{ matrix.dockerFileSuffix }}:latest

  tekton-tests:
    name: K8s Cluster interaction
    runs-on: ubuntu-latest
    env:
      TKN_VERSION: "v0.22.0"
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Setup KinD cluster with internal registry
        working-directory: scripts
        run: ./kind-with-registry.sh

      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        id: install

      - name: Install Tekton Core Components
        run: kubectl apply --filename https://storage.googleapis.com/tekton-releases/pipeline/previous/${TKN_VERSION}/release.notags.yaml

      - name: Spin up Bitbucket container
        working-directory: scripts
        run: ./run-bitbucket.sh

      - name: Spin up Nexus container
        working-directory: scripts
        run: ./run-nexus.sh

      - name: Spin up SonarQube container
        working-directory: scripts
        run: ./run-sonarqube.sh

      - name: Setup Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Run tests
        run: go test -v ./test/...
