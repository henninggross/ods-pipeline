# Generated by cmd/sidecar-tasks/main.go; DO NOT EDIT.
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  creationTimestamp: null
  name: ods-build-typescript-with-sidecar{{.Values.taskSuffix}}
spec:
  description: |-
    ODS Build Typescript applications
    **Sidecar variant!** Use this task if you need to run a container next to the build task.
    For example, this could be used to run a database to allow for integration tests.
    The sidecar image to must be supplied via `sidecar-image`.
    Apart from the sidecar, the task is an exact copy of `ods-build-typescript`.
  params:
  - default: .
    description: |
      Working directory. The path must be relative to the root of the repository,
      without leading `./` and trailing `/`.
    name: working-dir
    type: string
  - default: docker
    description: Path to the directory into which outputs should be placed, relative
      to `working-dir`. This directory may then later be used as Docker context for
      example.
    name: output-dir
    type: string
  - default: "false"
    description: Whether quality gate needs to pass.
    name: sonar-quality-gate
    type: string
  - default: "false"
    description: Whether to skip the SonarQube analysis or not.
    name: sonar-skip
    type: string
  - description: Image to use for sidecar
    name: sidecar-image
    type: string
  sidecars:
  - Workspaces: null
    image: $(params.sidecar-image)
    name: sidecar
    resources: {}
  steps:
  - env:
    - name: HOME
      value: /tekton/home
    - name: NEXUS_URL
      valueFrom:
        configMapKeyRef:
          key: url
          name: ods-nexus
    - name: NEXUS_USERNAME
      valueFrom:
        secretKeyRef:
          key: username
          name: ods-nexus-auth
    - name: NEXUS_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: ods-nexus-auth
    - name: DEBUG
      valueFrom:
        configMapKeyRef:
          key: debug
          name: ods-pipeline
    image: '{{.Values.registry}}/{{.Values.namespace}}/ods-typescript-toolset:{{.Values.imageTag}}'
    name: build-typescript
    resources: {}
    script: |2

      # build-typescript is build/package/scripts/build-typescript.sh.
      build-typescript \
        --working-dir=$(params.working-dir) \
        --output-dir=$(params.output-dir) \
        --debug=${DEBUG}
    workingDir: $(workspaces.source.path)
  - env:
    - name: HOME
      value: /tekton/home
    - name: SONAR_URL
      valueFrom:
        configMapKeyRef:
          key: url
          name: ods-sonar
    - name: SONAR_AUTH_TOKEN
      valueFrom:
        secretKeyRef:
          key: password
          name: ods-sonar-auth
    - name: DEBUG
      valueFrom:
        configMapKeyRef:
          key: debug
          name: ods-pipeline
    image: '{{.Values.registry}}/{{.Values.namespace}}/ods-sonar:{{.Values.imageTag}}'
    name: scan-with-sonar
    resources: {}
    script: |
      if [ "$(params.sonar-skip)" = "true" ]; then
        echo "Skipping SonarQube analysis"
      else
        mkdir -p .ods/artifacts/sonarqube-analysis
        # sonar is built from cmd/sonar/main.go.
        sonar \
          -working-dir=$(params.working-dir) \
          -quality-gate=$(params.sonar-quality-gate)
      fi
    workingDir: $(workspaces.source.path)
  workspaces:
  - name: source
