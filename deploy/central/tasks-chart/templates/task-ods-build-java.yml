apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ods-build-java
spec:
  description: |
    Builds Java applications.

    The following steps are executed:
    - TODO

  params:
    - name: working-dir
      description: >-
        TODO
      type: string
      default: ""
    - name: gradle-additional-tasks
      description: >-
        TODO
      type: string
      default: ""
    - name: gradle-options
      description: >-
        TODO
      type: string
      default: ""
    - name: output-dir
      description: >-
        Path to the directory to use as Docker context.
        The resulting Java Jar will be copied there.
      type: string
      default: docker
    - name: sonar-quality-gate
      description: Whether the SonarQube quality gate needs to pass for the task to succeed.
      type: string
      default: "false"
    - name: sonar-skip
      description: Whether to skip SonarQube analysis or not.
      type: string
      default: "false"
  steps:
    - name: build-java-binary
      image: build/package/Dockerfile.java-toolset
      resources: {}
      script: |
        # build-java is build/package/scripts/build-java.sh.
        build-java \
          --working-dir=$(params.working-dir) \
          --output-dir=$(params.output-dir) \
          --gradle-additional-tasks=$(params.gradle-additional-tasks) \
          --gradle-options=$(params.gradle-options)
      workingDir: $(workspaces.source.path)
    - name: scan-with-sonar
      image: build/package/Dockerfile.sonar
      env:
        - name: SONAR_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-sonar
        - name: SONAR_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-sonar-auth
      resources: {}
      script: |
        if [ "$(params.sonar-skip)" = "true" ]; then
          echo "Skipping SonarQube analysis"
        else
          mkdir -p .ods/artifacts/sonarqube-analysis
          # sonar is built from cmd/sonar/main.go.
          sonar -quality-gate=$(params.sonar-quality-gate)
        fi
      workingDir: $(workspaces.source.path)
  workspaces:
    - name: source
