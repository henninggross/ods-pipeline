apiVersion: tekton.dev/v1beta1
kind: '{{default "ClusterTask" .Values.taskKind}}'
metadata:
  name: ods-finish{{.Values.taskSuffix}}
spec:
  description: |
    Finishes the pipeline run.

    This task uploads generated artifacts to Nexus, and sets the build status of
    the built commit in Bitbucket according to the aggregate task status.

    This task is automatically added to any pipeline run in as a `finally` task
    by the webhook interceptor and cannot be customized by users at this point.
  params:
    - name: pipeline-run-name
      description: Name of pipeline run.
      type: string
    - name: aggregate-tasks-status
      description: Aggregate status of all tasks.
      default: "None"
  steps:
    - name: ods-finish
      # Image is built from build/package/Dockerfile.finish.
      image: '{{.Values.registry}}/{{.Values.namespace}}/ods-finish:{{.Values.imageTag}}'
      env:
        - name: HOME
          value: '/tekton/home'
        - name: NEXUS_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-nexus
        - name: NEXUS_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: ods-nexus-auth
        - name: NEXUS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-nexus-auth
        - name: NEXUS_TEMPORARY_REPOSITORY
          valueFrom:
            configMapKeyRef:
              key: temporaryRepository
              name: ods-nexus
        - name: NEXUS_PERMANENT_REPOSITORY
          valueFrom:
            configMapKeyRef:
              key: permanentRepository
              name: ods-nexus
        - name: BITBUCKET_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-bitbucket
        - name: BITBUCKET_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-bitbucket-auth
        - name: CONSOLE_URL
          valueFrom:
            configMapKeyRef:
              key: consoleUrl
              name: ods-cluster
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: ods-pipeline
      resources: {}
      workingDir: $(workspaces.source.path)
      script: |

        # ods-finish is built from cmd/finish/main.go.
        ods-finish \
          -pipeline-run-name=$(params.pipeline-run-name) \
          -aggregate-tasks-status=$(params.aggregate-tasks-status)

  workspaces:
    - description: The git repo will be present onto the volume backing this workspace
      name: source
