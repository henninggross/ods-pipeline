apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.interceptor.replicaCount }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {}
          image: "{{ .Values.interceptor.image.registry }}/{{ .Values.interceptor.image.namespace | default .Release.Namespace }}/{{ .Values.interceptor.image.repository | default .Chart.Name }}:{{ .Values.interceptor.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.interceptor.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: REPO_BASE
              valueFrom:
                configMapKeyRef:
                  key: repoBase
                  name: ods-bitbucket
            - name: ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  key: password
                  name: ods-bitbucket-auth
            - name: API_HOST
              value: '{{ .Values.interceptor.apiHost }}'
            - name: CONSOLE_URL
              value: '{{ .Values.interceptor.consoleUrl }}'
          readinessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 1
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 20
            periodSeconds: 3
          resources:
            {{- toYaml .Values.interceptor.resources | nindent 12 }}
      serviceAccountName: '{{ .Values.serviceAccountName }}'
      serviceAccount: '{{ .Values.serviceAccountName }}'
